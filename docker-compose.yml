version: '2.0'
services:

  #   see: https://hub.docker.com/r/yinlinchen/fcrepo4-docker/
  #   contains:
  #     Fedora (...:8080/fcrepo)
  #     Apache Karaf, Apache Camel
  fcrepo:
    build:                                    # on mac osx based host
      context: ./docker/fcrepo
      dockerfile: Dockerfile
    working_dir: /usr/local/tomcat
    container_name: gdz-be-$RAILS_ENV-fcrepo
    restart: always
    depends_on:
      - fuseki
      - solr
    ports:
      - "$FCREPO_EXTERNAL_PORT:8080"
    volumes:
      - $FCREPO_STORAGE/fcrepo/:/var/lib/tomcat/fcrepo4-data
    links:
      - solr
      - fuseki
    user: $USER_UID
    mem_limit: 2GB
    env_file: 
      - .env


  #   Solr (...:8983/solr) #   based on: https://github.com/docker-solr/docker-solr/blob/2e1ccd64970c65e7dacfe33203963b315f665cc3/5.5/Dockerfile
  solr:
    #image: solr:5.5
    build: docker/solr/
    container_name: gdz-be-$RAILS_ENV-solr
    restart: always
    ports:
      - "$SOLR_EXTERNAL_PORT:8983"
    volumes:
      - $FCREPO_STORAGE/solr/:/opt/solr/gdz/data/
    mem_limit: 2GB
    user: $USER_UID
    env_file: 
      - .env


  #   Fuseki (...:3030/fuseki)
  #   admin password will be generated on first start-up (see the logs)
  fuseki:
    image: stain/jena-fuseki
    #build: docker/fuseki/
    container_name: gdz-be-$RAILS_ENV-fuseki
    restart: always
    #ports:
    #  - "3030:3030"
    volumes:
      - $FCREPO_STORAGE/fuseki/:/fuseki/ #databases/ 
    #user: $USER_UID
    env_file: 
      - .env


  redis:
    build: docker/redis/
    #image: redis:3.0
    command: redis-server --appendonly yes
    container_name: gdz-be-$RAILS_ENV-redis
    restart: always
    #ports:
    #  - "6379:6379"
    volumes:
      - $FCREPO_STORAGE/redis/:/data/
    #user: $USER_UID
    mem_limit: 1GB
    env_file: 
      - .env


  web:
    #build: docker/web/
    build:
      context: .
      dockerfile: docker/web/Dockerfile
    command: bundle exec passenger start -e development --port 3000 #  --user=10021
    container_name: gdz-be-$RAILS_ENV-web
    restart: always
    links:
      - redis:redis
      - fcrepo:fcrepo
    volumes:
      - .:/home/web
      - $GDZ_DATA/:/gdzdata/:ro
    ports:
      - "$WEB_EXTERNAL_PORT:3000"
    #user: $USER_UID
    mem_limit: 1GB
    env_file: 
      - .env


  # for optimization start more then one instance of the node running the background processing (via docker swarm or kubernetes)
  gdz-be-worker:
    #build: docker/web/
    build:
      context: .
      dockerfile: docker/web/Dockerfile
    command: bundle exec sidekiq -q mets,3 -q collection,2 -q fileset,5 -q metsfileset,8 -q biblfileset,8 -q pagefileset, 8
    # container_name: worker    # you cannot scale a service beyond 1 container if you have specified a custom name (container names must be unique)
    restart: always
    depends_on:
      - web
    links:
      - redis:redis
      - fcrepo:fcrepo
    volumes:
      - .:/web
      - $GDZ_DATA/:/gdzdata/:ro
    mem_limit: 2GB
    #ports:
      #  - "3001"
    user: $USER_UID
    env_file: 
      - .env



#storage:
#  image: busybox
#  volumes:
#    - /var/lib/docker/storage
#  command: true

#haproxy:
#  build: .
#  command: .
#  hostname: active-proxy
#  volumes:
#    - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
#  ports:
#    - "80:80"
